{
  "openapi": "3.0.0",
  "info": {
    "title": "Swagger Json",
    "description": "This is a generated swagger json for your sails project",
    "termsOfService": "http://example.com/terms",
    "contact": {
      "name": "Theophilus Omoregbee",
      "url": "http://github.com/theo4u",
      "email": "theo4u@ymail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:1337/"
    }
  ],
  "externalDocs": {
    "url": "https://theoomoregbee.github.io/"
  },
  "tags": [
    {
      "name": "BaseModel",
      "description": "Sails blueprint actions for the **BaseModel** model"
    },
    {
      "name": "address",
      "description": "Sails blueprint actions for the **address** model"
    },
    {
      "name": "codegen",
      "description": "Sails blueprint actions for the **codegen** model"
    },
    {
      "name": "contacts",
      "description": "Sails blueprint actions for the **contacts** model"
    },
    {
      "name": "master",
      "description": "Sails blueprint actions for the **master** model"
    },
    {
      "name": "nav",
      "description": "Sails blueprint actions for the **nav** model"
    },
    {
      "name": "navigation",
      "description": "Sails blueprint actions for the **navigation** model"
    },
    {
      "name": "users",
      "description": "Sails blueprint actions for the **users** model"
    },
    {
      "name": "websettings",
      "description": "Sails blueprint actions for the **websettings** model"
    },
    {
      "name": "Upload"
    },
    {
      "name": "Email"
    },
    {
      "name": "Account"
    },
    {
      "name": "Word"
    }
  ],
  "components": {
    "schemas": {
      "basemodel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/basemodel-without-required-constraint"
          }
        ]
      },
      "basemodel-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **BaseModel**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string"
          },
          "created_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "updated_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "update_count": {
            "type": "number",
            "format": "double"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "mark_as_delete": {
            "type": "boolean"
          },
          "additional_attributes": {}
        }
      },
      "address": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/address-without-required-constraint"
          }
        ]
      },
      "address-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **address**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string"
          },
          "created_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "updated_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "update_count": {
            "type": "number",
            "format": "double"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "mark_as_delete": {
            "type": "boolean"
          },
          "additional_attributes": {},
          "addressline1": {
            "type": "string"
          },
          "addressline2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "number",
            "format": "double"
          },
          "postalcode": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "radius": {
            "type": "number",
            "format": "double"
          },
          "primary_address": {
            "type": "boolean"
          },
          "address_type": {
            "type": "number",
            "format": "double"
          },
          "entity_type": {
            "type": "number",
            "format": "double"
          },
          "published_at": {}
        }
      },
      "codegen": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/codegen-without-required-constraint"
          }
        ]
      },
      "codegen-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **codegen**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          }
        }
      },
      "contacts": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contacts-without-required-constraint"
          }
        ]
      },
      "contacts-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **contacts**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string"
          },
          "created_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "updated_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "update_count": {
            "type": "number",
            "format": "double"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "mark_as_delete": {
            "type": "boolean"
          },
          "additional_attributes": {},
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "primary_email": {
            "type": "string",
            "nullable": true
          },
          "mobile_numer": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "social_id": {
            "type": "string",
            "nullable": true
          },
          "social_type": {
            "type": "string",
            "nullable": true
          },
          "role_type": {
            "type": "string",
            "nullable": true
          },
          "published_at": {}
        }
      },
      "master": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/master-without-required-constraint"
          }
        ]
      },
      "master-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **master**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string"
          },
          "created_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "updated_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "update_count": {
            "type": "number",
            "format": "double"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "mark_as_delete": {
            "type": "boolean"
          },
          "additional_attributes": {},
          "parent_code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "published_at": {}
        }
      },
      "nav": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/nav-without-required-constraint"
          }
        ]
      },
      "nav-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **nav**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string"
          },
          "created_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "updated_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "update_count": {
            "type": "number",
            "format": "double"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "mark_as_delete": {
            "type": "boolean"
          },
          "additional_attributes": {},
          "parent_code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "published_at": {}
        }
      },
      "navigation": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/navigation-without-required-constraint"
          }
        ]
      },
      "navigation-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **navigation**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string"
          },
          "created_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "updated_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "update_count": {
            "type": "number",
            "format": "double"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "mark_as_delete": {
            "type": "boolean"
          },
          "additional_attributes": {},
          "parent_code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "published_at": {}
        }
      },
      "users": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/users-without-required-constraint"
          }
        ]
      },
      "users-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **users**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string"
          },
          "created_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "updated_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "update_count": {
            "type": "number",
            "format": "double"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "mark_as_delete": {
            "type": "boolean"
          },
          "additional_attributes": {},
          "login": {
            "type": "string"
          },
          "hashed_password": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          },
          "last_login_on": {},
          "language": {
            "type": "string"
          },
          "auth_source_id": {
            "type": "number",
            "format": "double"
          },
          "salt": {
            "type": "string"
          },
          "must_change_password": {
            "type": "boolean"
          },
          "passwd_changed_on": {},
          "published_at": {}
        }
      },
      "websettings": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/websettings-without-required-constraint"
          }
        ]
      },
      "websettings-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **websettings**",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string"
          },
          "created_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "updated_by": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "update_count": {
            "type": "number",
            "format": "double"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "mark_as_delete": {
            "type": "boolean"
          },
          "additional_attributes": {},
          "parent_code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "published_at": {}
        }
      }
    },
    "parameters": {
      "ModelPKParam-basemodel": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **BaseModel** record's primary key value"
      },
      "ModelPKParam-address": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **address** record's primary key value"
      },
      "ModelPKParam-codegen": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **codegen** record's primary key value"
      },
      "ModelPKParam-contacts": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **contacts** record's primary key value"
      },
      "ModelPKParam-master": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **master** record's primary key value"
      },
      "ModelPKParam-nav": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **nav** record's primary key value"
      },
      "ModelPKParam-navigation": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **navigation** record's primary key value"
      },
      "ModelPKParam-users": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **users** record's primary key value"
      },
      "ModelPKParam-websettings": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "description": "Note Sails special attributes: autoIncrement"
        },
        "description": "The desired **websettings** record's primary key value"
      },
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "paths": {
    "/authenticate": {
      "post": {
        "summary": "/authenticate",
        "tags": [
          "users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/authenticateToken": {
      "post": {
        "summary": "/authenticateToken",
        "tags": [
          "users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/file/upload": {
      "post": {
        "summary": "/file/upload",
        "tags": [
          "Upload"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/file/delete": {
      "post": {
        "summary": "/file/delete",
        "tags": [
          "Upload"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/file/move": {
      "post": {
        "summary": "/file/move",
        "tags": [
          "Upload"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/codegen/columndef": {
      "post": {
        "summary": "/codegen/columndef",
        "tags": [
          "codegen"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/email/send": {
      "post": {
        "summary": "/email/send",
        "tags": [
          "Email"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/email/forgotpassword": {
      "post": {
        "summary": "/email/forgotpassword",
        "tags": [
          "Email"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/template/bind": {
      "post": {
        "summary": "/template/bind",
        "tags": [
          "Email"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/signin": {
      "post": {
        "summary": "/user/signin",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/export/word": {
      "post": {
        "summary": "Word",
        "description": "For a given docx template and data, generates word files and sends it back as byte stream ",
        "tags": [
          "Word"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "template",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "data",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "filename",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Word file has been generated successfully"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/file/downloadlink/fileid": {
      "post": {
        "summary": "/file/downloadlink/fileid",
        "tags": [
          "Upload"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/email/send/generic": {
      "post": {
        "summary": "/email/send/generic",
        "tags": [
          "Email"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/basemodel": {
      "get": {
        "summary": "List BaseModel (find where)",
        "description": "Find a list of **BaseModel** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "BaseModel"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **BaseModel** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/basemodel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create BaseModel",
        "description": "Create a new **BaseModel** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "BaseModel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **BaseModel** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/basemodel"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the BaseModel instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/basemodel"
              }
            }
          }
        }
      }
    },
    "/basemodel/{_id}": {
      "get": {
        "summary": "Get BaseModel (find one)",
        "description": "Look up the **BaseModel** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "BaseModel"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-basemodel"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **BaseModel** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/basemodel"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **BaseModel** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update BaseModel",
        "description": "Update an existing **BaseModel** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "BaseModel"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-basemodel"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **BaseModel** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/basemodel"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **BaseModel** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the BaseModel instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/basemodel-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete BaseModel (destroy)",
        "description": "Delete the **BaseModel** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "BaseModel"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-basemodel"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **BaseModel** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/basemodel"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **BaseModel** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/address": {
      "get": {
        "summary": "List address (find where)",
        "description": "Find a list of **address** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "address"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,addressline1,addressline2,city,state,country,postalcode,latitude,longitude,radius,primary_address,address_type,entity_type,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,addressline1,addressline2,city,state,country,postalcode,latitude,longitude,radius,primary_address,address_type,entity_type,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **address** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/address"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create address",
        "description": "Create a new **address** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "address"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **address** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/address"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the address instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/address"
              }
            }
          }
        }
      }
    },
    "/address/{_id}": {
      "get": {
        "summary": "Get address (find one)",
        "description": "Look up the **address** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "address"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-address"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,addressline1,addressline2,city,state,country,postalcode,latitude,longitude,radius,primary_address,address_type,entity_type,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,addressline1,addressline2,city,state,country,postalcode,latitude,longitude,radius,primary_address,address_type,entity_type,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **address** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/address"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **address** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update address",
        "description": "Update an existing **address** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "address"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-address"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **address** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/address"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **address** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the address instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/address-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete address (destroy)",
        "description": "Delete the **address** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "address"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-address"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **address** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/address"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **address** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/codegen": {
      "get": {
        "summary": "List codegen (find where)",
        "description": "Find a list of **codegen** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "codegen"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **codegen** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/codegen"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create codegen",
        "description": "Create a new **codegen** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "codegen"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **codegen** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/codegen"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the codegen instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/codegen"
              }
            }
          }
        }
      }
    },
    "/codegen/{_id}": {
      "get": {
        "summary": "Get codegen (find one)",
        "description": "Look up the **codegen** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "codegen"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-codegen"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **codegen** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/codegen"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **codegen** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update codegen",
        "description": "Update an existing **codegen** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "codegen"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-codegen"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **codegen** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/codegen"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **codegen** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the codegen instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/codegen-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete codegen (destroy)",
        "description": "Delete the **codegen** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "codegen"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-codegen"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **codegen** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/codegen"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **codegen** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "summary": "List contacts (find where)",
        "description": "Find a list of **contacts** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "contacts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,first_name,last_name,primary_email,mobile_numer,location,social_id,social_type,role_type,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,first_name,last_name,primary_email,mobile_numer,location,social_id,social_type,role_type,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **contacts** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/contacts"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create contacts",
        "description": "Create a new **contacts** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "contacts"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **contacts** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contacts"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the contacts instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contacts"
              }
            }
          }
        }
      }
    },
    "/contacts/{_id}": {
      "get": {
        "summary": "Get contacts (find one)",
        "description": "Look up the **contacts** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "contacts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-contacts"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,first_name,last_name,primary_email,mobile_numer,location,social_id,social_type,role_type,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,first_name,last_name,primary_email,mobile_numer,location,social_id,social_type,role_type,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **contacts** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contacts"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **contacts** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update contacts",
        "description": "Update an existing **contacts** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "contacts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-contacts"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **contacts** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contacts"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **contacts** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the contacts instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contacts-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete contacts (destroy)",
        "description": "Delete the **contacts** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "contacts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-contacts"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **contacts** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contacts"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **contacts** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/master": {
      "get": {
        "summary": "List master (find where)",
        "description": "Find a list of **master** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "master"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **master** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/master"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create master",
        "description": "Create a new **master** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "master"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **master** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/master"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the master instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/master"
              }
            }
          }
        }
      }
    },
    "/master/{_id}": {
      "get": {
        "summary": "Get master (find one)",
        "description": "Look up the **master** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "master"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-master"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **master** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/master"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **master** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update master",
        "description": "Update an existing **master** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "master"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-master"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **master** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/master"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **master** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the master instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/master-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete master (destroy)",
        "description": "Delete the **master** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "master"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-master"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **master** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/master"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **master** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/nav": {
      "get": {
        "summary": "List nav (find where)",
        "description": "Find a list of **nav** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "nav"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,icon,link,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,icon,link,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **nav** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/nav"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create nav",
        "description": "Create a new **nav** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "nav"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **nav** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nav"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the nav instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nav"
              }
            }
          }
        }
      }
    },
    "/nav/{_id}": {
      "get": {
        "summary": "Get nav (find one)",
        "description": "Look up the **nav** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "nav"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-nav"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,icon,link,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,icon,link,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **nav** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nav"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **nav** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update nav",
        "description": "Update an existing **nav** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "nav"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-nav"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **nav** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nav"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **nav** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the nav instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nav-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete nav (destroy)",
        "description": "Delete the **nav** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "nav"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-nav"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **nav** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nav"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **nav** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/navigation": {
      "get": {
        "summary": "List navigation (find where)",
        "description": "Find a list of **navigation** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "navigation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,icon,link,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,icon,link,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **navigation** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/navigation"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create navigation",
        "description": "Create a new **navigation** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "navigation"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **navigation** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/navigation"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the navigation instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/navigation"
              }
            }
          }
        }
      }
    },
    "/navigation/{_id}": {
      "get": {
        "summary": "Get navigation (find one)",
        "description": "Look up the **navigation** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "navigation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-navigation"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,icon,link,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,icon,link,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **navigation** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/navigation"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **navigation** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update navigation",
        "description": "Update an existing **navigation** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "navigation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-navigation"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **navigation** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/navigation"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **navigation** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the navigation instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/navigation-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete navigation (destroy)",
        "description": "Delete the **navigation** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "navigation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-navigation"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **navigation** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/navigation"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **navigation** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List users (find where)",
        "description": "Find a list of **users** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,login,hashed_password,firstname,lastname,email,admin,last_login_on,language,auth_source_id,salt,must_change_password,passwd_changed_on,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,login,hashed_password,firstname,lastname,email,admin,last_login_on,language,auth_source_id,salt,must_change_password,passwd_changed_on,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **users** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/users"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create users",
        "description": "Create a new **users** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **users** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the users instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users"
              }
            }
          }
        }
      }
    },
    "/users/{_id}": {
      "get": {
        "summary": "Get users (find one)",
        "description": "Look up the **users** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-users"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,login,hashed_password,firstname,lastname,email,admin,last_login_on,language,auth_source_id,salt,must_change_password,passwd_changed_on,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,login,hashed_password,firstname,lastname,email,admin,last_login_on,language,auth_source_id,salt,must_change_password,passwd_changed_on,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **users** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **users** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update users",
        "description": "Update an existing **users** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-users"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **users** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **users** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the users instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete users (destroy)",
        "description": "Delete the **users** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-users"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **users** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **users** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/websettings": {
      "get": {
        "summary": "List websettings (find where)",
        "description": "Find a list of **websettings** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "websettings"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **websettings** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/websettings"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create websettings",
        "description": "Create a new **websettings** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "websettings"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **websettings** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/websettings"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the websettings instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/websettings"
              }
            }
          }
        }
      }
    },
    "/websettings/{_id}": {
      "get": {
        "summary": "Get websettings (find one)",
        "description": "Look up the **websettings** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "websettings"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-websettings"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,published_at"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id,code,created_by,updated_by,created_at,updated_at,update_count,is_enabled,mark_as_delete,additional_attributes,parent_code,name,description,published_at"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **websettings** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/websettings"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **websettings** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update websettings",
        "description": "Update an existing **websettings** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "websettings"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-websettings"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **websettings** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/websettings"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **websettings** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the websettings instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/websettings-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete websettings (destroy)",
        "description": "Delete the **websettings** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "websettings"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-websettings"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **websettings** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/websettings"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **websettings** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}